1. Maze solving algorithm:

	1.1 Describe your algorithm:

		Step 1: Start moving downwards.

		Condition 1: If there is no wall in front of you and walls to your sides, continue forward.

		Condition 2: If there are walls in front of you and walls to your sides, turn around.

		Condition 3: If there is a wall in front of you, and one to your left, go right.

		Condition 4: If there is a wall in front of you, and one to your right, go left.

		Condition 5: If there is a wall in front of you, and no walls to your sides, pick the left or right path at random.

		Condition 6: If there is no wall in front of you, no wall to your left, and a wall to your right, pick between the left and forward path at random.

		Condition 7: If there is no wall in front of you, no wall to your right, and a wall to your left, pick between the right and forward path at random.

		Condition 8: If there are no walls in front of you, to your left, or to your right, pick between the three paths at random.

		Condition 9: If the exit is in front of you, to your left, or to your right, go to it and win.

	1.2 Can your algorithm avoid going in circles?

		My algorithm can go in cirlcles, but it will never be stuck in one. Eventually, after passing over the same condition multiple times, it will choose a
		different path out of random chance.

2. Maze creating program:

	2.1 Important maze criteria:

		1. A good maze should have plenty of dead-ends.
		2. It should avoid areas that are disconnected from the rest of the maze, areas that are inescapable.
		3. It should only have one exit.
		4. It should have plenty of twists and turns, and too many long corridors.
		5. It's walls shouldn't ever be more than one unit thick.

	2.2 Describe how your algorithm could meet the criteria:

		It would create the outline, the empty box, of the maze depending on what dimensions are needed.

		It would pick any non-corner wall segment and make that the exit.

		It would start from the exit and begin to create paths in the maze fallowing these rules: 
													         xx
			1. No wall segments should ever create a cube of wall segments, no stacked walls.    ex. xx

			2. Every non-wall segment of the maze should be part of a path that leads to the exit.

		At each point along the maze creators journey, it would randomly choose between*:

			1. Continuing the path forward.

			2. Turning right or left.

			3. Creating a T intersection.

			4. Creating a dead end and turning around.

		*It would only consider options that followed the outlined rules.

		After it has filled out the entire area, it would present the newly created maze.